# # Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# # Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# # Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# # m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите количество элементов 1-го множества: "))
# m = int(input("Введите количество элементов 2-го множества: "))

# res1 = set()
# res2 = set()

# for i in range(n):
#     p = int(input("Введите число для 1-го множества x раз: "))
#     res1.add(p)
# print()
# for j in range(m):
#     b = int(input("Введите число для 2-го множества x раз: "))
#     res2.add(b)
# print(res1)
# print(res2)

# res = res1.intersection(res2)
# print(res)

# while len(res) != 0:
#     print(min(res), end=' ')
#     res.discard(min(res))
# print(" - числа, которые встречаются в обоих множествах.")


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке,
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число
# ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из
# управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь
# непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход
# собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

n = int(input("Введите кол-во кустов: "))
garden_bed = []

for i in range(n):
    bush = int(input(f"Введите урожай с {i+1}-го куста: "))
    garden_bed.append(bush)

max_berries = garden_bed[0] + garden_bed[-1] + garden_bed[1]
for i in range(1, n-1):
    berries = garden_bed[i-1] + garden_bed[i] + garden_bed[i+1]
    if berries > max_berries:
        max_berries = berries

print('Урожайность кустов:', garden_bed)
print(f'За один заход модуль может собрать максимальное число ягод, равное {max_berries}.')